allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'maven'

    version = '1.1.2-SNAPSHOT'
    group = 'io.github.nibiruos.afip'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven {
            url "https://oss.sonatype.org/content/groups/staging/"
        }
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://oss.sonatype.org/content/repositories/google-snapshots/"
        }
    }

}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    project.ext {
        nibiruId = 'afip'
    }

    sourceCompatibility = 1.8

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    tasks.withType(Javadoc) {
        // Workaround for https://github.com/gradle/gradle/issues/5630
        (options as CoreJavadocOptions).addStringOption("sourcepath", "")
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar
                pom {
                    name = 'Nibiru ' + project.name
                    description = 'AFIP services client, compatible with Android.'
                    url = 'https://github.com/NibiruOS/' + nibiruId + '/tree/master/' + project.name
                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'lbrasseur'
                            name = 'Lautaro Brasseur'
                            email = 'lbrasseur@gmail.com'
                        }
                    }
                    scm {
                        connection = 'https://github.com/NibiruOS/' + nibiruId + '.git'
                        developerConnection = 'https://github.com/NibiruOS/' + nibiruId + '.git'
                        url = 'https://github.com/NibiruOS/' + nibiruId
                    }
                }
            }
        }
        repositories {
            maven {
                credentials {
                    username = null
                    password = null
                }
                url version.endsWith('SNAPSHOT') ? 'https://oss.sonatype.org/content/repositories/snapshots' : 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }

    javadoc {
        failOnError = false
        classpath = sourceSets.main.compileClasspath
    }

    dependencies {
        testCompile "junit:junit:4.12"
    }
}